# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Create centroid GeoJSON index

on:
  push:
    branches: [ main ]
    paths:
      - 'las-files/*.las'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  centroid-index:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Setup micromamba with PDAL & jq
        uses: mamba-org/setup-micromamba@v2
        with:
          micromamba-version: 'latest'
          environment-name: pdal-env
          create-args: >-
            -c conda-forge
            pdal
            jq
          cache-environment: true
          init-shell: bash

      - name: Check PDAL & jq versions
        shell: bash -l {0}
        run: |
          micromamba activate pdal-env
          pdal --version
          jq --version

      - name: Find LAS files
        id: list
        shell: bash
        run: |
          FILES=$(git ls-files 'las-files/*.las' 2>/dev/null | sort -u || true)
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "Found files:"; echo "$FILES"

      - name: Rebuild index.geojson from ALL LAS
        if: steps.list.outputs.files != ''
        shell: bash -l {0}
        run: |
          set -euo pipefail
          micromamba activate pdal-env
          INDEX="index.geojson"
          echo '{ "type": "FeatureCollection", "features": [] }' > "$INDEX"

          SUCCESS_COUNT=0
          FAIL_COUNT=0

          while IFS= read -r f; do
            [ -z "$f" ] && continue
            echo "Processing: $f"

            tmp_pipeline="$(mktemp)"
            meta="$(mktemp)"

            jq -n --arg in "$f" '{
              pipeline: [
                $in,
                {type:"filters.reprojection", out_srs:"EPSG:4326"},
                {type:"filters.stats", dimensions:"X,Y,Z"},
                {type:"writers.null"}
              ]
            }' > "$tmp_pipeline"

            if ! pdal pipeline "$tmp_pipeline" --metadata "$meta" 2>&1; then
              echo "ERROR: PDAL failed on $f"
              ((FAIL_COUNT++))
              rm -f "$tmp_pipeline" "$meta"
              continue
            fi

            X=$(jq -r '.metadata["filters.stats"].statistic[] | select(.name=="X") | .average' "$meta")
            Y=$(jq -r '.metadata["filters.stats"].statistic[] | select(.name=="Y") | .average' "$meta")
            Z=$(jq -r '.metadata["filters.stats"].statistic[] | select(.name=="Z") | .average' "$meta")

            if [[ -z "$X" || -z "$Y" || "$X" == "null" || "$Y" == "null" ]]; then
              echo "WARN: No valid centroid for $f"
              ((FAIL_COUNT++))
              rm -f "$tmp_pipeline" "$meta"
              continue
            fi

            jq --arg file "$f" --argjson x "$X" --argjson y "$Y" --argjson z "${Z:-null}" \
              '.features += [{
                "type":"Feature",
                "properties":{"source_file":$file,"z":$z},
                "geometry":{"type":"Point","coordinates":[ $x, $y ]}
              }]' "$INDEX" > "$INDEX.tmp" && mv "$INDEX.tmp" "$INDEX"

            ((SUCCESS_COUNT++))
            rm -f "$tmp_pipeline" "$meta"
          done <<< "${{ steps.list.outputs.files }}"

          echo "Processed: $SUCCESS_COUNT successful, $FAIL_COUNT failed"

          if [ "$SUCCESS_COUNT" -eq 0 ]; then
            echo "ERROR: No files were successfully processed"
            exit 1
          fi

          jq '.features | length' "$INDEX"

      - name: Commit only index.geojson
        if: steps.list.outputs.files != ''
        shell: bash -l {0}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add index.geojson
          if ! git diff --cached --quiet; then
            git commit -m "Update centroid index for LAS changes [skip ci]"
            git push
          else
            echo "No changes in index.geojson."
          fi